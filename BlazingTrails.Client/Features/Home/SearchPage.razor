@page "/search/{SearchQuery}"
@page "/search/{SearchQuery}/maxlength/{MaxLength:int}"
@inject HttpClient Http
@inject NavigationManager NavManager

<nav aria-label="breadcrumb">
	<ol class="breadcrumb">
		<li class="breadcrumb-item"><a href="/">Home</a></li>
		<li class="breadcrumb-item active" aria-current="page">Search</li>
	</ol>
</nav>

<h3>Search results for: "<em>@SearchQuery</em>"</h3>
<SearchFilter SearchQuery="@SearchQuery" />

@if (_searchResults == null)
{
	<p>Loading search results...</p>
}
else
{
	<TrailDetails Trail="_selectedTrail" />
	<div class="grid">
		@foreach (var trail in _searchResults)
		{
			<TrailCard Trail="trail" OnSelected="HandleTrailSelected" />
		}
	</div>
}

@code {
	private IEnumerable<Trail>? _searchResults;
	private Trail? _selectedTrail;

	[Parameter] public string SearchQuery { get; set; }
	[Parameter] public int? MaxLength { get; set; }



	protected override async Task OnInitializedAsync()
	{
		try
		{
			var allTrails = await Http.GetFromJsonAsync<IEnumerable<Trail>>("trails/trail-data.json");
			_searchResults = allTrails.Where(_ => _.Name.Contains(SearchQuery, StringComparison.CurrentCultureIgnoreCase) || 
											    _.Location.Contains(SearchQuery, StringComparison.CurrentCultureIgnoreCase));
		}
		catch (Exception ex)
		{
			Console.WriteLine($"There was a problem loading the trail data: {ex.Message}");
		}
	}

	private void HandleTrailSelected(Trail trail) => _selectedTrail = trail;
}
